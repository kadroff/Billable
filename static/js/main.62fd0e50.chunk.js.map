{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_useState","useState","quantity","price","percent","company_info","company_name","description_label","invoice_date_label","invoice_number","invoice_number_label","kind","notes_b","price_label","quantity_label","recipient_info","subtotal_label","tax_name","tax_percentage","total_label","invoice_date","description_table_row","_useState2","Object","slicedToArray","values","setValues","ref","React","createRef","subtotal","total","items","JSON","parse","localStorage","getItem","billableItems","handleInputChange","e","value","target","name","objectSpread","defineProperty","react_default","a","createElement","Main","react_to_pdf_default","targetRef","filename","_ref","toPdf","OptionButton","type","onClick","valueItems","setItem","stringify","billableValue","Pages","Kind","defaultValue","onChange","CompanyName","AddressCompany","InformationCompany","TableDate","TableDateHeader","TableDateData","TableDescription","style","width","backgroundColor","className","height","TableTotal","toFixed","FooterNotes","textAlign","styled","div","_templateObject","_templateObject2","input","_templateObject3","textarea","_templateObject4","_templateObject5","_templateObject6","table","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62fd0e50.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Pdf from \"react-to-pdf\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  const [values, setValues] = useState({\n    quantity: 1,\n    price: 2,\n    percent: 12,\n    company_info: \"www.example.com↵info@example.com\",\n    company_name: \"Example Co.\",\n    description_label: \"Item & Description\",\n    invoice_date_label: \"Date\",\n    invoice_number: \"1\",\n    invoice_number_label: \"Invoice #\",\n    kind: \"INVOICE\",\n    notes_b: \"Created with Billable.me\",\n    price_label: \"Price\",\n    quantity_label: \"Quantity\",\n    recipient_info:\n      \"Michael Scott Paper Company Inc.1725 Slough Avenue↵Scranton, Pennsylvania\",\n    subtotal_label: \"Subtotal\",\n    tax_name: \"VAT\",\n    tax_percentage: \"14\",\n    total_label: \"Total\",\n    invoice_date: \"10 July, 2019\",\n    description_table_row: \"\"\n  });\n  const ref = React.createRef();\n  const subtotal = values.quantity * values.price;\n  const percent = (values.percent / 100) * subtotal;\n  const total = subtotal + percent;\n  const items = JSON.parse(localStorage.getItem(\"billable_items\"));\n  const billableItems = JSON.parse(localStorage.getItem(\"billable\"));\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n    setValues({ ...values, [name]: value });\n  };\n\n  const setLocalStorage = () => {\n    const valueItems = {\n      quantity: values.quantity,\n      price: values.price\n    };\n    localStorage.setItem(\"billable_items\", JSON.stringify(valueItems));\n    JSON.parse(localStorage.getItem(\"billable_items\"));\n\n    const billableValue = {\n      company_info: values.company_info,\n      company_name: values.company_name,\n      description_label: values.description_label,\n      invoice_date_label: values.invoice_date_label,\n      invoice_number: values.invoice_number,\n      invoice_number_label: values.invoice_number_label,\n      kind: values.kind,\n      notes_b: values.notes_b,\n      price_label: values.price_label,\n      quantity_label: values.quantity_label,\n      recipient_info: values.recipient_info,\n      subtotal_label: values.subtotal_label,\n      tax_name: values.tax_name,\n      total_label: values.total_label,\n      invoice_date: values.invoice_date,\n      description_table_row: values.description_label\n    };\n\n    localStorage.setItem(\"billable\", JSON.stringify(billableValue));\n    JSON.parse(localStorage.getItem(\"billable\"));\n  };\n\n  return (\n    <Main>\n      {/* Convert to PDF */}\n      <Pdf targetRef={ref} filename=\"invoice.pdf\">\n        {({ toPdf }) => (\n          <OptionButton type=\"button\" value=\"Download PDF\" onClick={toPdf} />\n        )}\n      </Pdf>\n\n      <OptionButton type=\"button\" value=\"Save\" onClick={setLocalStorage} />\n\n      <Pages ref={ref}>\n        <Kind\n          type=\"text\"\n          defaultValue={\n            billableItems != null ? billableItems.kind : values.kind\n          }\n          name=\"kind\"\n          onChange={handleInputChange}\n        />\n        <CompanyName\n          name=\"company_name\"\n          onChange={handleInputChange}\n          defaultValue={\n            billableItems != null\n              ? billableItems.company_name\n              : values.company_name\n          }\n        />\n        <AddressCompany\n          defaultValue={\n            billableItems != null\n              ? billableItems.company_info\n              : values.company_info\n          }\n          name=\"company_info\"\n          onChange={handleInputChange}\n        />\n        <InformationCompany\n          defaultValue={\n            billableItems != null\n              ? billableItems.recipient_info\n              : values.recipient_info\n          }\n          name=\"recipient_info\"\n          onChange={handleInputChange}\n        />\n        <TableDate>\n          <tbody>\n            <tr>\n              <th>\n                <TableDateHeader\n                  type=\"text\"\n                  name=\"invoice_number_label\"\n                  onChange={handleInputChange}\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.invoice_number_label\n                      : values.invoice_number_label\n                  }\n                />\n              </th>\n              <td>\n                <TableDateData\n                  type=\"text\"\n                  name=\"invoice_number\"\n                  onChange={handleInputChange}\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.invoice_number\n                      : values.invoice_number\n                  }\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <th>\n                <TableDateHeader\n                  type=\"text\"\n                  name=\"invoice_date_label\"\n                  onChange={handleInputChange}\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.invoice_date_label\n                      : values.invoice_date_label\n                  }\n                />\n              </th>\n              <td>\n                <TableDateData\n                  type=\"text\"\n                  name=\"invoice_date\"\n                  onChange={handleInputChange}\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.invoice_date\n                      : values.invoice_date\n                  }\n                />\n              </td>\n            </tr>\n          </tbody>\n        </TableDate>\n        <TableDescription>\n          <tbody>\n            <tr>\n              <th style={{ width: \"50%\", backgroundColor: \"#f1f4f3\" }}>\n                <TableDateHeader\n                  type=\"text\"\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.description_label\n                      : values.description_label\n                  }\n                  name=\"description_label\"\n                  onChange={handleInputChange}\n                  style={{ width: \"100%\" }}\n                />\n              </th>\n              <th style={{ backgroundColor: \"#f1f4f3\" }}>\n                <TableDateHeader\n                  type=\"text\"\n                  name=\"quantity_label\"\n                  onChange={handleInputChange}\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.quantity_label\n                      : values.quantity_label\n                  }\n                />\n              </th>\n              <th style={{ backgroundColor: \"#f1f4f3\" }}>\n                <TableDateHeader\n                  type=\"text\"\n                  name=\"price_label\"\n                  onChange={handleInputChange}\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.price_label\n                      : values.price_label\n                  }\n                />\n              </th>\n            </tr>\n            <tr>\n              <td\n                className=\"description_table_row\"\n                name=\"description_table_row\"\n                defaultValue={\n                  billableItems != null\n                    ? billableItems.description_table_row\n                    : values.description_table_row\n                }\n                onChange={handleInputChange}\n                style={{ width: \"100%\" }}\n              >\n                <TableDateData style={{ width: \"100%\", height: \"100%\" }} />\n              </td>\n              <td className=\"description_table_row\">\n                <TableDateData\n                  type=\"number\"\n                  name=\"quantity\"\n                  defaultValue={\n                    items != null ? items.quantity : values.quantity\n                  }\n                  onChange={handleInputChange}\n                />\n              </td>\n              <td className=\"description_table_row\">\n                <TableDateData\n                  type=\"number\"\n                  name=\"price\"\n                  defaultValue={items != null ? items.price : values.price}\n                  onChange={handleInputChange}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </TableDescription>\n\n        <TableTotal>\n          <tbody>\n            <tr>\n              <th className=\"total_table_header\">\n                <TableDateHeader\n                  type=\"text\"\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.subtotal_label\n                      : values.subtotal_label\n                  }\n                  className=\"total_table\"\n                  name=\"subtotal_label\"\n                  onChange={handleInputChange}\n                />\n              </th>\n              <th className=\"total_table_percent\" />\n              <th className=\"total_table_calculate\">{subtotal.toFixed(2)}</th>\n            </tr>\n\n            <tr>\n              <th>\n                <TableDateHeader\n                  type=\"text\"\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.tax_name\n                      : values.tax_name\n                  }\n                  name=\"tax_name\"\n                  onChange={handleInputChange}\n                  className=\"total_table\"\n                />\n              </th>\n              <th>\n                <TableDateData\n                  name=\"percent\"\n                  type=\"number\"\n                  value={\n                    billableItems != null\n                      ? billableItems.percent\n                      : values.percent\n                  }\n                  onChange={handleInputChange}\n                  className=\"total_table\"\n                />\n              </th>\n              <th>{percent.toFixed(2)}</th>\n            </tr>\n\n            <tr>\n              <th>\n                <TableDateHeader\n                  type=\"text\"\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.total_label\n                      : values.total_label\n                  }\n                  name=\"total_label\"\n                  onChange={handleInputChange}\n                  className=\"total_table\"\n                />\n              </th>\n              <th>\n                <TableDateData className=\"total_table\" />\n              </th>\n              <th>{total.toFixed(2)}</th>\n            </tr>\n          </tbody>\n        </TableTotal>\n\n        <FooterNotes />\n        <FooterNotes\n          style={{ textAlign: \"right\" }}\n          name=\"notes_b\"\n          onChange={handleInputChange}\n          defaultValue={\n            billableItems != null ? billableItems.notes_b : values.notes_b\n          }\n        />\n      </Pages>\n    </Main>\n  );\n}\n\nexport default App;\n\nconst Main = styled.div`\n  width: 22cm;\n  max-width: 840px;\n  background-color: white;\n  margin: 0 auto;\n`;\n\nconst Pages = styled.div`\n  width: 21cm;\n  max-width: 874px;\n  background: #fafbfb;\n  border: 1px solid #f5f7f6;\n  margin: 20px;\n  padding: 13px 0;\n  display: grid;\n  grid-gap: 2vw;\n  grid-template-columns: 50% 45%;\n  grid-template-areas:\n    \"kind kind\"\n    \"name address\"\n    \"information table_date\"\n    \"table_description table_description\"\n    \"total total\"\n    \"footer footer\";\n`;\n\nconst Kind = styled.input`\n  grid-area: kind\n  text-align: center;\n  border: 1px solid #d4d6d9;\n  border-width: 1px 0;\n  padding: 6px 0;\n  color: #2f5756;\n  font-weight: bold;\n  text-transform: uppercase;\n  margin: 0 0 15px 0;\n\n  &:hover {\n    background-color: rgb(249, 245, 198);\n  }\n`;\n\nconst CompanyName = styled.textarea`\n  grid-area: name\n  overflow: hidden;\n  resize: none;\n  font-size: 3em;\n  height: 110px;\n  border: none;\n  background-color: #fafbfb;\n\n  &:hover {\n    background-color: rgb(249, 245, 198);\n  }\n`;\n\nconst AddressCompany = styled.textarea`\n  grid-area: address\n  overflow: hidden;\n  text-align: right;\n  resize: none;\n  height: 110px;\n  border: none;\n  background-color: #fafbfb;\n\n  &:hover {\n    background-color: rgb(249, 245, 198);\n  }\n`;\n\nconst InformationCompany = styled.textarea`\n  grid-area: information\n  overflow: hidden;\n  resize: none;\n  height: 110px;\n  border: none;\n  background-color: #fafbfb;\n\n  &:hover {\n    background-color: rgb(249, 245, 198);\n  }\n`;\n\nconst TableDate = styled.table`\n  grid-area: table_date\n  border: 1px solid #ced5d2;\n  border-collapse: collapse;\n  table-layout: auto;\n  width: 1px;\n`;\n\nconst TableDateHeader = styled.input`\n  border: none;\n  padding: 6px 0;\n  color: #2f5756;\n  font-weight: bold;\n\n  &:hover {\n    background-color: rgb(249, 245, 198);\n  }\n`;\n\nconst TableDateData = styled.input`\n  border: none;\n  padding: 6px 0;\n\n  &:hover {\n    background-color: rgb(249, 245, 198);\n  }\n`;\n\nconst TableDescription = styled.table`\n  grid-area: table_description\n  border: 1px solid #ced5d2;\n  border-collapse: collapse;\n`;\n\nconst TableTotal = styled.table`\n  grid-area: total\n  width: 35%\n  margin-left: 58%;\n  border: 1px solid #ced5d2;\n  border-collapse: collapse;\n`;\n\nconst OptionButton = styled.input`\n  height: 26px;\n  line-height: 26px;\n  padding: 0 16px;\n  text-decoration: none;\n  background: #fff;\n  color: #93b8b3;\n  margin: 0 5px 0 0;\n  border: 1px solid #93b8b3;\n  border-radius: 0.5em;\n  cursor: pointer;\n`;\n\nconst FooterNotes = styled.textarea`\n  grid-ares: footer;\n  color: #bebebe;\n  font-size: 0.9em;\n  padding-bottom: 9px;\n  resize: none;\n  border: none;\n  background-color: #fafbfb;\n\n  &:hover {\n    background-color: rgb(249, 245, 198);\n  }\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}