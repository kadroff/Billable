{"version":3,"sources":["TableRow.js","App.js","serviceWorker.js","index.js"],"names":["TableRow","react_default","a","createElement","className","name","style","width","TableDateData","height","type","styled","input","_templateObject","App","billableItems","JSON","parse","localStorage","getItem","items","_useState","useState","row_count","quantity","price","percent","company_info","company_name","description_label","invoice_date_label","invoice_number","invoice_number_label","kind","price_label","quantity_label","recipient_info","invoice_date","description_table_row","_useState2","Object","slicedToArray","values","setValues","ref","React","createRef","subtotal","total","handleInputChange","e","value","target","objectSpread","defineProperty","rows","_useState3","_useState4","stateOptions","setStateValues","rowsItem","Main","react_to_pdf_default","targetRef","filename","_ref","toPdf","OptionButtonPdf","onClick","OptionButtonSave","valueItems","setItem","stringify","billableValue","notes_b","subtotal_label","tax_name","total_label","Pages","Kind","defaultValue","onChange","CompanyName","AddressCompany","DateCompany","CompanyDateInput","NumberCompany","CompanyDateInvoice","InformationCompany","TableDescription","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","paddingLeft","TableDateHeader","borderTopRightRadius","borderBottomRightRadius","App_TableDateData","map","row","src_TableRow","AddRowButton","concat","toConsumableArray","TableTotal","TableTotalDate","toFixed","marginLeft","fontSize","borderTop","fontWeight","div","App_templateObject","_templateObject2","_templateObject3","textarea","_templateObject4","_templateObject5","p","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","table","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f0649ec.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction TableRow() {\n  return (\n    <tr>\n      <td\n        className=\"description_table_row\"\n        name=\"description_table_row\"\n        style={{ width: \"100%\" }}\n      >\n        <TableDateData style={{ width: \"100%\", height: \"100%\" }} />\n      </td>\n      <td className=\"description_table_row\">\n        <TableDateData type=\"number\" name=\"quantity\" />\n      </td>\n      <td className=\"description_table_row\">\n        <TableDateData type=\"number\" name=\"price\" />\n      </td>\n    </tr>\n  );\n}\n\nexport default TableRow;\n\nconst TableDateData = styled.input`\n  border: none;\n  padding: 6px 0;\n`;\n","import React, { useState } from \"react\";\nimport Pdf from \"react-to-pdf\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport TableRow from \"./TableRow.js\";\n\nfunction App() {\n  const billableItems = JSON.parse(localStorage.getItem(\"billable\"));\n  const items = JSON.parse(localStorage.getItem(\"billable_items\"));\n  const [values, setValues] = useState({\n    row_count: 5,\n    quantity: items !== null ? items.quantity : 1,\n    price: items !== null ? items.price : 2,\n    percent: items !== null ? items.percent : 12,\n    company_info:\n      billableItems !== null\n        ? billableItems.company_info\n        : \"www.example.comâ†µinfo@example.com\",\n    company_name:\n      billableItems !== null ? billableItems.company_name : \"Example Co.\",\n    description_label:\n      billableItems !== null\n        ? billableItems.description_label\n        : \"Item & Description\",\n    invoice_date_label:\n      billableItems !== null ? billableItems.invoice_date_label : \"Date\",\n    invoice_number: billableItems !== null ? billableItems.invoice_number : \"1\",\n    invoice_number_label:\n      billableItems !== null ? billableItems.invoice_number_label : \"Invoice #\",\n    kind: billableItems !== null ? billableItems.kind : \"INVOICE\",\n    price_label: billableItems !== null ? billableItems.price_label : \"Price\",\n    quantity_label:\n      billableItems !== null ? billableItems.quantity_label : \"Quantity\",\n    recipient_info:\n      billableItems !== null\n        ? billableItems.recipient_info\n        : \"Michael Scott Paper Company Inc.1725 Slough Avenueâ†µScranton, Pennsylvania\",\n    invoice_date:\n      billableItems !== null ? billableItems.invoice_date : \"10 July, 2019\",\n    description_table_row:\n      billableItems !== null ? billableItems.description_table_row : \"\"\n  });\n  const ref = React.createRef();\n  const subtotal = values.quantity * values.price;\n  const percent = (values.percent / 100) * subtotal;\n  const total = subtotal + percent;\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n    setValues({ ...values, [name]: value });\n  };\n\n  const setLocalStorage = () => {\n    const valueItems = {\n      quantity: values.quantity,\n      price: values.price,\n      percent: values.percent\n    };\n    localStorage.setItem(\"billable_items\", JSON.stringify(valueItems));\n    JSON.parse(localStorage.getItem(\"billable_items\"));\n\n    const billableValue = {\n      company_info: values.company_info,\n      company_name: values.company_name,\n      description_label: values.description_label,\n      invoice_date_label: values.invoice_date_label,\n      invoice_number: values.invoice_number,\n      invoice_number_label: values.invoice_number_label,\n      kind: values.kind,\n      notes_b: values.notes_b,\n      price_label: values.price_label,\n      quantity_label: values.quantity_label,\n      recipient_info: values.recipient_info,\n      subtotal_label: values.subtotal_label,\n      tax_name: values.tax_name,\n      total_label: values.total_label,\n      invoice_date: values.invoice_date,\n      description_table_row: values.description_label,\n      row_count: values.row_count\n    };\n\n    localStorage.setItem(\"billable\", JSON.stringify(billableValue));\n    JSON.parse(localStorage.getItem(\"billable\"));\n    localStorage.setItem(\"rows\", JSON.stringify(stateOptions));\n  };\n  const rows = JSON.parse(localStorage.getItem(\"rows\"));\n  const [stateOptions, setStateValues] = useState(rows !== null ? rows : []);\n\n  const addRow = () => {\n    const newElement = 1;\n    setStateValues([...stateOptions, newElement]);\n  };\n  const rowsItem = rows !== null ? rows : [];\n\n  return (\n    <Main>\n      {/* Convert to PDF */}\n      <Pdf targetRef={ref} filename=\"invoice.pdf\">\n        {({ toPdf }) => (\n          <OptionButtonPdf type=\"button\" value=\"Download PDF\" onClick={toPdf} />\n        )}\n      </Pdf>\n\n      <OptionButtonSave type=\"button\" value=\"Save\" onClick={setLocalStorage} />\n\n      <Pages ref={ref}>\n        <Kind\n          type=\"text\"\n          defaultValue={\n            billableItems != null ? billableItems.kind : values.kind\n          }\n          name=\"kind\"\n          onChange={handleInputChange}\n        />\n        <CompanyName\n          name=\"company_name\"\n          onChange={handleInputChange}\n          defaultValue={\n            billableItems != null\n              ? billableItems.company_name\n              : values.company_name\n          }\n        />\n        <AddressCompany\n          defaultValue={\n            billableItems != null\n              ? billableItems.company_info\n              : values.company_info\n          }\n          name=\"company_info\"\n          onChange={handleInputChange}\n        />\n        <DateCompany>Date Issued:</DateCompany>\n        <CompanyDateInput\n          name=\"invoice_date\"\n          defaultValue={\n            billableItems != null\n              ? billableItems.invoice_date\n              : values.invoice_date\n          }\n          onChange={handleInputChange}\n        />\n        <NumberCompany>Invoice No:</NumberCompany>\n        <CompanyDateInvoice\n          name=\"invoice_number\"\n          defaultValue={\n            billableItems != null\n              ? billableItems.invoice_number\n              : values.invoice_number\n          }\n          onChange={handleInputChange}\n        />\n        <InformationCompany\n          defaultValue={\n            billableItems != null\n              ? billableItems.recipient_info\n              : values.recipient_info\n          }\n          name=\"recipient_info\"\n          onChange={handleInputChange}\n        />\n        <TableDescription>\n          <tbody>\n            <tr>\n              <th\n                style={{\n                  width: \"50%\",\n                  backgroundColor: \"#4473EA\",\n                  borderTopLeftRadius: \"3px\",\n                  borderBottomLeftRadius: \"3px\",\n                  paddingLeft: \"19px\"\n                }}\n              >\n                <TableDateHeader\n                  type=\"text\"\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.description_label\n                      : values.description_label\n                  }\n                  name=\"description_label\"\n                  onChange={handleInputChange}\n                  style={{ width: \"100%\" }}\n                />\n              </th>\n              <th style={{ backgroundColor: \"#4473EA\" }}>\n                <TableDateHeader\n                  type=\"text\"\n                  name=\"quantity_label\"\n                  onChange={handleInputChange}\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.quantity_label\n                      : values.quantity_label\n                  }\n                />\n              </th>\n              <th\n                style={{\n                  backgroundColor: \"#4473EA\",\n                  borderTopRightRadius: \"3px\",\n                  borderBottomRightRadius: \"3px\"\n                }}\n              >\n                <TableDateHeader\n                  type=\"text\"\n                  name=\"price_label\"\n                  onChange={handleInputChange}\n                  defaultValue={\n                    billableItems != null\n                      ? billableItems.price_label\n                      : values.price_label\n                  }\n                />\n              </th>\n            </tr>\n            <tr>\n              <td\n                className=\"description_table_row\"\n                name=\"description_table_row\"\n                defaultValue={\n                  billableItems != null\n                    ? billableItems.description_table_row\n                    : values.description_table_row\n                }\n                onChange={handleInputChange}\n                style={{ width: \"100%\" }}\n              >\n                <TableDateData style={{ width: \"100%\", height: \"100%\" }} />\n              </td>\n              <td className=\"description_table_row\">\n                <TableDateData\n                  type=\"number\"\n                  name=\"quantity\"\n                  defaultValue={\n                    items != null ? items.quantity : values.quantity\n                  }\n                  onChange={handleInputChange}\n                />\n              </td>\n              <td className=\"description_table_row\">\n                <TableDateData\n                  type=\"number\"\n                  name=\"price\"\n                  defaultValue={items != null ? items.price : values.price}\n                  onChange={handleInputChange}\n                />\n              </td>\n            </tr>\n\n            {rowsItem.map(row => (\n              <TableRow />\n            ))}\n\n            <tr>\n              <td>\n                <AddRowButton type=\"button\" onClick={addRow} value=\"[ + ]\" />\n              </td>\n            </tr>\n          </tbody>\n        </TableDescription>\n\n        <TableTotal>\n          <tbody>\n            <div>\n              <tr>\n                <th>\n                  <TableTotalDate>Subtotal:</TableTotalDate>\n                </th>\n                <th className=\"total_table_calculate\">\n                  ${subtotal.toFixed(2)}\n                </th>\n              </tr>\n\n              <tr>\n                <th>\n                  <TableTotalDate style={{ marginLeft: \"45px\" }}>\n                    VAT\n                  </TableTotalDate>\n                </th>\n                <th>\n                  <TableDateData\n                    name=\"percent\"\n                    type=\"number\"\n                    defaultValue={\n                      billableItems != null ? items.percent : values.percent\n                    }\n                    onChange={handleInputChange}\n                    className=\"total_table\"\n                    style={{ marginLeft: \"-90px\", fontSize: \"14px\" }}\n                  />\n                </th>\n\n                <th className=\"total_table_calculate\">\n                  <p style={{ marginLeft: \"-105px\" }}>${percent.toFixed(2)}</p>\n                </th>\n              </tr>\n            </div>\n            <tr>\n              <div\n                style={{ borderTop: \"2px solid #4473EA\", paddingLeft: \"20%\" }}\n              >\n                <th>\n                  <TableTotalDate>Total:</TableTotalDate>\n                </th>\n                <th\n                  style={{ fontWeight: 600, fontSize: \"21px\" }}\n                  className=\"total_table_calculate\"\n                >\n                  ${total.toFixed(2)}\n                </th>\n              </div>\n            </tr>\n          </tbody>\n        </TableTotal>\n      </Pages>\n    </Main>\n  );\n}\n\nexport default App;\n\nconst Main = styled.div`\n  width: 21cm;\n  max-width: 840px;\n  background-color: #f9fafe;\n  margin: 0 auto;\n`;\n\nconst Pages = styled.div`\n  max-width: 840px;\n  background: white;\n  border: 1px solid #f5f7f6;\n  margin-top: 34px;\n  display: grid;\n  grid-gap: 2vw;\n  grid-template-columns: 50% 45%;\n  grid-template-areas:\n    \"kind kind\"\n    \"name address\"\n    \"information table_date\"\n    \"table_description table_description\"\n    \"total total\"\n    \"footer footer\";\n`;\n\nconst Kind = styled.input`\n  grid-area: kind;\n  text-align: center;\n  font-size: 32px;\n  line-height: 28px;\n  padding: 48px 0;\n  margin: 0 0 15px 0;\n  border: none;\n`;\n\nconst CompanyName = styled.textarea`\n  grid-area: name;\n  overflow: hidden;\n  resize: none;\n  font-size: 21px;\n  height: 20px;\n  border: none;\n  padding-left: 52px;\n`;\n\nconst AddressCompany = styled.textarea`\n  grid-area: address;\n  overflow: hidden;\n  text-align: right;\n  resize: none;\n  padding-right: 51px;\n  height: 110px;\n  color: #4473ea;\n  font-size: 12px;\n  border: none;\n\n  &:hover {\n    background-color: #f9fafe;\n  }\n`;\n\nconst DateCompany = styled.p`\n  grid-area: name;\n  font-size: 13px;\n  padding-top: 25px;\n  padding-left: 53px;\n`;\n\nconst NumberCompany = styled.p`\n  grid-area: name;\n  font-size: 13px;\n  padding-top: 46px;\n  padding-left: 53px;\n`;\n\nconst CompanyDateInput = styled.input`\n  grid-area: name;\n  overflow: hidden;\n  resize: none;\n  height: 15px;\n  width: 105px;\n  font-size: 13px;\n  font-weight: bold;\n  margin-left: 130px;\n  margin-top: 38px;\n  border: none;\n`;\n\nconst CompanyDateInvoice = styled.input`\n  grid-area: name;\n  overflow: hidden;\n  resize: none;\n  height: 15px;\n  width: 105px;\n  font-size: 13px;\n  font-weight: bold;\n  margin-left: 122px;\n  margin-top: 58px;\n  border: none;\n`;\n\nconst InformationCompany = styled.textarea`\n  grid-area: information;\n  overflow: hidden;\n  resize: none;\n  height: 110px;\n  font-size: 12px;\n  padding-left: 61px;\n  border: none;\n`;\n\nconst TableDateHeader = styled.input`\n  border: none;\n  padding: 6px 0;\n  color: white;\n  background: #4473ea;\n  font-weight: bold;\n\n  &:hover {\n    background: #4473ea;\n  }\n`;\n\nconst TableDateData = styled.input`\n  border: none;\n  padding: 6px 0;\n  font-size: 14px;\n  text-align: right;\n`;\n\nconst TableDescription = styled.table`\n  grid-area: table_description\n  width: 86%;\n  height: 107px;\n  border-collapse: collapse;\n  margin: 0 auto;\n  \n  \n`;\n\nconst TableTotal = styled.table`\n  grid-area: total\n  width: 35%\n  margin-left: 58%;\n  font-size: 12px;\n`;\n\nconst TableTotalDate = styled.p`\n  font-size: 17px;\n  font-weight: 400;\n  margin-left: 80px;\n`;\n\nconst OptionButtonSave = styled.input`\n  width: 92px;\n  height: 30px;\n  cursor: pointer;\n  margin-left: 501px;\n  background: #4473ea;\n  font-size: 16px;\n  color: white;\n  border: 1px solid #4473ea;\n  border-radius: 15px;\n\n  &:hover {\n    background: #4473ea;\n  }\n`;\n\nconst OptionButtonPdf = styled.input`\n  width: 144px;\n  height: 32px;\n  margin-top: 23px;\n  margin-left: 25px;\n  cursor: pointer;\n  background: white;\n  font-size: 16px;\n  color: #4473ea;\n  border: 1px solid #4473ea;\n  border-radius: 15px;\n`;\n\nconst AddRowButton = styled.input`\n  font-size: 0.8em;\n  outline: none;\n  text-decoration: none;\n  background: none;\n  border: none;\n  color: #4473ea;\n  cursor: pointer;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}